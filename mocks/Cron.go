// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	cron "github.com/exluap/kit/cron"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Cron is an autogenerated mock type for the Cron type
type Cron struct {
	mock.Mock
}

// Action provides a mock function with given fields: a
func (_m *Cron) Action(a cron.Action) cron.Cron {
	ret := _m.Called(a)

	var r0 cron.Cron
	if rf, ok := ret.Get(0).(func(cron.Action) cron.Cron); ok {
		r0 = rf(a)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cron.Cron)
		}
	}

	return r0
}

// At provides a mock function with given fields: t
func (_m *Cron) At(t time.Time) cron.Cron {
	ret := _m.Called(t)

	var r0 cron.Cron
	if rf, ok := ret.Get(0).(func(time.Time) cron.Cron); ok {
		r0 = rf(t)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cron.Cron)
		}
	}

	return r0
}

// Every provides a mock function with given fields: i
func (_m *Cron) Every(i time.Duration) cron.Cron {
	ret := _m.Called(i)

	var r0 cron.Cron
	if rf, ok := ret.Get(0).(func(time.Duration) cron.Cron); ok {
		r0 = rf(i)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cron.Cron)
		}
	}

	return r0
}

// UnderUser provides a mock function with given fields: userId, username
func (_m *Cron) UnderUser(userId string, username string) cron.Cron {
	ret := _m.Called(userId, username)

	var r0 cron.Cron
	if rf, ok := ret.Get(0).(func(string, string) cron.Cron); ok {
		r0 = rf(userId, username)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cron.Cron)
		}
	}

	return r0
}
